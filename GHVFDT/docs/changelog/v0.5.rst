.. currentmodule:: skmultiflow
.. include:: _labels.rst

Version 0.5.3
-------------

**June 2020**

- |FIX| Address a bug that triggered an error in the conda-forge pipeline for
  Windows.

Version 0.5.0
-------------

**June 2020**

- |Feature| Add :class:`drift_detection.HDDM_A`, a drift detection method based
  on the Hoeffding's bounds with moving average-test. Contributor:
  `jiahy <https://github.com/jiahy0825>`_
  (`#161 <https://github.com/scikit-multiflow/scikit-multiflow/pull/161>`_).
- |Feature| Add :class:`drift_detection.HDDM_W`, a drift detection method based
  on the Hoeffding's bounds with moving weighted-average-test. Contributor:
  `jiahy <https://github.com/jiahy0825>`_
  (`#161 <https://github.com/scikit-multiflow/scikit-multiflow/pull/161>`_).
- |Feature| Add the Kolmogorov-Smirnov Windowing
  (:class:`drift_detection.KSWIN`) concept drift detector. Contributor:
  `ChristophRaab <https://github.com/ChristophRaab>`_
  (`#234 <https://github.com/scikit-multiflow/scikit-multiflow/pull/234>`_).
- |Feature| Add :class:`transform.WindowedMinmaxScaler`, a transformer to
  perform feature scaling. Transformation is performed considering samples in a
  sliding window.. Contributor: `jmrozanec <https://github.com/jmrozanec>`_
  (`#184 <https://github.com/scikit-multiflow/scikit-multiflow/pull/184>`_).
- |Feature| Add :class:`transform.WindowedStandardScaler`, a transformer to
  standardize features by removing the mean and scaling to unit variance.
  Transformation is performed considering samples in a sliding window.
  Contributor: `jmrozanec <https://github.com/jmrozanec>`_
  (`#184 <https://github.com/scikit-multiflow/scikit-multiflow/pull/184>`_).
- |Feature| Add :class:`meta.AdaptiveRandomForestRegressor`. This
  implementation is slightly different from the original algorithm. The
  **Hoeffding Tree Regressor** is used as base learner, instead of the
  **FIMT-DD**. It also adds a new strategy to monitor the incoming data and
  check for concept drifts. For more information, see the notes in the
  documentation of this method.
- |Feature| Add the Streaming Random Patches ensemble method
  (:class:`meta.StreamingRandomPatchesClassifier`).
- |Feature| Add :class:`lazy.KNNRegressor`, a nearest-neighbor-based method
  for regression.
- |Feature| Add support for delayed labels and evaluations. Add
  :class:`data.TemporalDataStream` to handle temporal data in a stream.
  Add :class:`evaluation.EvaluatePrequentialDelayed` evaluator. Contributor:
  `fabriciojoc <https://github.com/fabriciojoc>`_
  (`#222 <https://github.com/scikit-multiflow/scikit-multiflow/pull/222>`_).
- |Feature| Add sine anomaly data generator
  (:class:`data.AnomalySineGenerator`).
- |Efficiency| Refactored classification performance evaluators, implemented
  in Cython for efficiency. Add support for multi-class precision, recall,
  F1-score, and geometric mean. New estimators are ~12x faster for binary data,
  ~52x faster for multi-class data and ~11x faster for multi-label data.
- |Efficiency| Enhance the strategy to deal with categorical attributes in
  Hoeffding Trees. Previously, complexity was :math:`O(c)` per update, being
  :math:`c` the number of categories. Now, by using hash structures,
  complexity is :math:`O(1)`.
- |Efficiency| Remove datasets files from the package. Data sets remain
  available in a dedicated
  `repository <https://github.com/scikit-multiflow/streaming-datasets>`_. This
  results in file size reductions of ~35x for source distribution size and ~32x
  for wheels.
- |Enhancement| Add ``bootstrap_sampling`` option to the
  :class:`trees.HoeffdingAdaptiveTreeClassifier`.
- |Enhancement| Improvements on data loading methods: Check data consistency.
  Raise error if non-numeric data types are used. Raise error if there are
  missing values. Add option to disable missing values error.
- |Enhancement| Enable the ``describe_subtree`` method in regression variants
  of the Hoeffding Tree for single-target and multi-target.
- |Enhancement| Add example code to documentation of multiple methods.
- |Enhancement| Streamlines the usage of attribute observers in tree-based
  methods for regression. Add a new and improved observer that works with both
  single-target and multi-target tasks. The enhanced
  ``NumericAttributeRegressionObserver`` also adds support for instance
  weighting.
- |FIX| Fix index out of range for the classification functions in the
  :class:`data.MIXEDGenerator`. Contributor:
  `ingako <https://github.com/ingako>`_.
- |FIX| Fix bug in IntraClusterVarianceReduction split criterion.
- |FIX| Fix bug in the ``predict_proba`` method of the
  :class:`meta.AdaptiveRandomForestClassifier` triggered when ``classes``
  are not defined.
- |FIX| Fix ``subtree_depth`` calculation in the
  :class:`trees.HoeffdingTreeClassifier`.
- |FIX| Fix bug in instance sorting in the inner nodes of the
  :class:`trees.HoeffdingAdaptiveTreeClassifier`. Previously, the adaptive
  split nodes were not passing the incoming samples to their descendants.
- |FIX| Add check for zero sum error to avoid division by zero error in
  :class:`bayes.NaiveBayes`. Contributor: `Fiona (fwille)
  <https://github.com/fwille>`_.
- |FIX| Fix bug in :class:`meta.LearnPPNSEClassifier` that resulted in an error
  when not all classes are observed by any of the ensemble members. Add an
  early stop mechanism when adding members of the ensemble if classification
  error reaches zero, making the normalization step ill-defined.
- |FIX| Fix minor bug in the computation of the incremental variance in
  :class:`drift_detection.ADWIN`. Bug had no significant impact on methods
  relying on ADWIN to detect drift.
- |FIX| Fix bug in methods that failed when ``predict`` was called before the
  first ``partial_fit``/``fit``. Impacted methods are:
  :class:`lazy.KNNClassifier`, :class:`meta.OnlineAdaC2Classifier`,
  :class:`meta.OnlineBoostingClassifier`,
  :class:`meta.OnlineUnderOverBaggingClassifier`,
  :class:`meta.OnlineSMOTEBaggingClassifier`,
  :class:`meta.OnlineCSB2Classifier` and
  :class:`anomaly_detection.HalfSpaceTrees`.
- |FIX| Fix tree growth and update in
  :class:`trees.HoeffdingAdaptiveTreeClassifier` and
  :class:`trees.HoeffdingAdaptiveTreeRegressor`. Bug was affecting the vote
  aggregation in both methods.
- |FIX| Fix bug in evaluators that resulted in a ``runtime_error`` when
  ``model_size`` or ``running_time`` appear first in the ``metrics`` option.
- |FIX| :class:`meta.LeveragingBaggingClassifier`. Fix bug that resulted in
  unreachable code during initialization when ``enable_code_matrix`` is set.
  Fix bug when ``enable_code_matrix`` options is set.
- |FIX| Re-enable weighted vote in
  :class:`meta.AdaptiveRandomForestClassifier`. This default behavior was
  mistakenly suppressed. This bug impacted the variants of the algorithm that
  use *majority class* and *naive bayes* leaf prediction mechanisms.
- |FIX| Minor bug fixes and other improvements.
- |API| rename ``weight`` to ``sample_weight`` in
  :class:`meta.OnlineRUSBoostClassifier` and
  :class:`rules.VeryFastDecisionRulesClassifier`. Contributor: `Ben Auffarth
  (benman1) <https://github.com/benman1>`_.
- |API| Deprecate the `prepare_for_use` method in the
  :class:`data.base_stream.Stream` class. Now ``Stream`` objects are ready to
  use after instantiation. A ``prepare_for_use`` stub will be kept for 2 minor
  releases for backward compatibility and will be removed in v0.7.0.
- |API| ``n_features`` is no longer a required parameter for
  :class:`anomaly_detection.HalfSpaceTrees`. ``n_features`` is now obtained
  from the data as it is passed for training.
- |API| Enforce naming convention for learning methods. Old names will remain
  available for 2 minor releases for backward compatibility and will be
  removed in v0.7.0. Renamed methods are:

+------------------------------------------+--------------------------------------------------------+
| **Deprecated name**                      | **New name**                                           |
+==========================================+========================================================+
| lazy.KNN                                 | :class:`lazy.KNNClassifier`                            |
+------------------------------------------+--------------------------------------------------------+
| lazy.KNNAdwin                            | :class:`lazy.KNNADWINClassifier`                       |
+------------------------------------------+--------------------------------------------------------+
| lazy.SAMKNN                              | :class:`lazy.SAMKNNClassifier`                         |
+------------------------------------------+--------------------------------------------------------+
| meta.AccuracyWeightedEnsemble            | :class:`meta.AccuracyWeightedEnsembleClassifier`       |
+------------------------------------------+--------------------------------------------------------+
| meta.AdaptiveRandomForest                | :class:`meta.AdaptiveRandomForestClassifier`           |
+------------------------------------------+--------------------------------------------------------+
| meta.AdditiveExpertEnsemble              | :class:`meta.AdditiveExpertEnsembleClassifier`         |
+------------------------------------------+--------------------------------------------------------+
| meta.BatchIncremental                    | :class:`meta.BatchIncrementalClassifier`               |
+------------------------------------------+--------------------------------------------------------+
| meta.DynamicWeightedMajority             | :class:`meta.DynamicWeightedMajorityClassifier`        |
+------------------------------------------+--------------------------------------------------------+
| meta.LearnNSE                            | :class:`meta.LearnPPNSEClassifier`                     |
+------------------------------------------+--------------------------------------------------------+
| meta.LearnPP                             | :class:`meta.LearnPPClassifier`                        |
+------------------------------------------+--------------------------------------------------------+
| meta.LeverageBagging                     | :class:`meta.LeveragingBaggingClassifier`              |
+------------------------------------------+--------------------------------------------------------+
| meta.OnlineAdaC2                         | :class:`meta.OnlineAdaC2Classifier`                    |
+------------------------------------------+--------------------------------------------------------+
| meta.OnlineBoosting                      | :class:`meta.OnlineBoostingClassifier`                 |
+------------------------------------------+--------------------------------------------------------+
| meta.OnlineCSB2                          | :class:`meta.OnlineCSB2Classifier`                     |
+------------------------------------------+--------------------------------------------------------+
| meta.OnlineRUSBoost                      | :class:`meta.OnlineRUSBoostClassifier`                 |
+------------------------------------------+--------------------------------------------------------+
| meta.OnlineSMOTEBagging                  | :class:`meta.OnlineSMOTEBaggingClassifier`             |
+------------------------------------------+--------------------------------------------------------+
| meta.OnlineUnderOverBagging              | :class:`meta.OnlineUnderOverBaggingClassifier`         |
+------------------------------------------+--------------------------------------------------------+
| meta.OzaBagging                          | :class:`meta.OzaBaggingClassifier`                     |
+------------------------------------------+--------------------------------------------------------+
| meta.OzaBaggingAdwin                     | :class:`meta.OzaBaggingADWINClassifier`                |
+------------------------------------------+--------------------------------------------------------+
| rules.VFDR                               | :class:`rules.VeryFastDecisionRulesClassifier`         |
+------------------------------------------+--------------------------------------------------------+
| trees.HoeffdingTree                      | :class:`trees.HoeffdingTreeClassifier`                 |
+------------------------------------------+--------------------------------------------------------+
| trees.HAT                                | :class:`trees.HoeffdingAdaptiveTreeClassifier`         |
+------------------------------------------+--------------------------------------------------------+
| trees.HATT                               | :class:`trees.ExtremelyFastDecisionTreeClassifier`     |
+------------------------------------------+--------------------------------------------------------+
| trees.LCHT                               | :class:`trees.LabelCombinationHoeffdingTreeClassifier` |
+------------------------------------------+--------------------------------------------------------+
| trees.RegressionHoeffdingTree            | :class:`trees.HoeffdingTreeRegressor`                  |
+------------------------------------------+--------------------------------------------------------+
| trees.RegressionHAT                      | :class:`trees.HoeffdingAdaptiveTreeRegressor`          |
+------------------------------------------+--------------------------------------------------------+
| trees.MultiTargetRegressionHoeffdingTree | :class:`trees.iSOUPTreeRegressor`                      |
+------------------------------------------+--------------------------------------------------------+

